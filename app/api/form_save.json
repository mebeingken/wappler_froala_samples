{
  "meta": {
    "$_POST": [
      {
        "type": "text",
        "name": "form_data"
      },
      {
        "type": "text",
        "multiple": true,
        "name": "froala_image"
      },
      {
        "type": "text",
        "multiple": true,
        "name": "froala_image_to_delete"
      },
      {
        "type": "number",
        "name": "post_id"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "",
        "options": {
          "comment": "If there are froala images (images that should be retained)"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.froala_image}}",
          "then": {
            "steps": [
              {
                "name": "",
                "options": {
                  "comment": "then remove the image path from the tmp media record"
                }
              },
              {
                "name": "each_froala_image",
                "module": "core",
                "action": "repeat",
                "options": {
                  "repeat": "{{$_POST.froala_image}}",
                  "outputFields": [],
                  "exec": {
                    "steps": {
                      "name": "delete_tmp_image",
                      "module": "dbupdater",
                      "action": "delete",
                      "options": {
                        "connection": "db",
                        "sql": {
                          "type": "delete",
                          "table": "tmp_media",
                          "wheres": {
                            "condition": "AND",
                            "rules": [
                              {
                                "id": "path",
                                "field": "path",
                                "type": "string",
                                "operator": "equal",
                                "value": "{{$value}}",
                                "data": {
                                  "column": "path"
                                },
                                "operation": "="
                              }
                            ],
                            "conditional": null,
                            "valid": true
                          },
                          "returning": "id",
                          "query": "DELETE\nFROM tmp_media\nWHERE path = :P1 /* {{$value}} */",
                          "params": [
                            {
                              "operator": "equal",
                              "type": "expression",
                              "name": ":P1",
                              "value": "{{$value}}"
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ]
                    }
                  }
                },
                "meta": [
                  {
                    "name": "$index",
                    "type": "number"
                  },
                  {
                    "name": "$number",
                    "type": "number"
                  },
                  {
                    "name": "$name",
                    "type": "text"
                  },
                  {
                    "name": "$value",
                    "type": "object"
                  }
                ],
                "outputType": "array"
              }
            ]
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "options": {
          "comment": "if there are froala delete images (images no longer used)"
        }
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{$_POST.froala_image_to_delete}}",
          "then": {
            "steps": [
              {
                "name": "",
                "options": {
                  "comment": "then delete the physical file"
                }
              },
              {
                "name": "each_froala_image_to_delete",
                "module": "core",
                "action": "repeat",
                "options": {
                  "repeat": "{{$_POST.froala_image_to_delete}}",
                  "outputFields": [],
                  "exec": {
                    "steps": {
                      "name": "fileExists",
                      "module": "fs",
                      "action": "exists",
                      "options": {
                        "path": "{{'/public'+$value}}",
                        "then": {
                          "steps": {
                            "name": "fileRemove",
                            "module": "fs",
                            "action": "remove",
                            "options": {
                              "path": "{{'/public'+$value}}"
                            },
                            "outputType": "boolean"
                          }
                        }
                      },
                      "outputType": "boolean"
                    }
                  }
                },
                "output": true,
                "meta": [
                  {
                    "name": "$index",
                    "type": "number"
                  },
                  {
                    "name": "$number",
                    "type": "number"
                  },
                  {
                    "name": "$name",
                    "type": "text"
                  },
                  {
                    "name": "$value",
                    "type": "object"
                  }
                ],
                "outputType": "array"
              }
            ]
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{!$_POST.post_id}}",
          "then": {
            "steps": {
              "name": "insert",
              "module": "dbupdater",
              "action": "insert",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "insert",
                  "values": [
                    {
                      "table": "post",
                      "column": "form_data",
                      "type": "text",
                      "value": "{{$_POST.form_data}}"
                    }
                  ],
                  "table": "post",
                  "returning": "id",
                  "query": "INSERT INTO post\n(form_data) VALUES (:P1 /* {{$_POST.form_data}} */)",
                  "params": [
                    {
                      "name": ":P1",
                      "type": "expression",
                      "value": "{{$_POST.form_data}}"
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "identity",
                  "type": "text"
                },
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          },
          "else": {
            "steps": {
              "name": "update_post",
              "module": "dbupdater",
              "action": "update",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "update",
                  "values": [
                    {
                      "table": "post",
                      "column": "form_data",
                      "type": "text",
                      "value": "{{$_POST.form_data}}"
                    }
                  ],
                  "table": "post",
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "id",
                        "field": "id",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{$_POST.post_id}}",
                        "data": {
                          "column": "id"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "returning": "id",
                  "query": "UPDATE post\nSET form_data = :P1 /* {{$_POST.form_data}} */\nWHERE id = :P2 /* {{$_POST.post_id}} */",
                  "params": [
                    {
                      "name": ":P1",
                      "type": "expression",
                      "value": "{{$_POST.form_data}}"
                    },
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P2",
                      "value": "{{$_POST.post_id}}"
                    }
                  ]
                }
              },
              "meta": [
                {
                  "name": "affected",
                  "type": "number"
                }
              ]
            }
          }
        },
        "outputType": "boolean"
      }
    ]
  }
}